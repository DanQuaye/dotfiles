" Loading pathogen from bundle folder
runtime bundle/vim-pathogen/autoload/pathogen.vim
call pathogen#infect()

" General settings
syntax on
filetype plugin indent on

" Display settings
set number
set ruler
set shortmess=I

" Turn mouse mode on
set mouse=a

" Turn alert bells off
set noerrorbells t_vb=
set visualbell

" Turns off swap files and backups
set nobackup
set nowritebackup
set noswapfile

" Indentation settings
set autoindent
set cindent

" Stop files folding when they're opened
set foldlevelstart=99

" Actual formatting options
set expandtab
set tabstop=4
set shiftwidth=4

" Colorscheme settings
set background=dark
let g:solarized_termtrans = 1
colorscheme solarized

" Vim airline settings
set laststatus=2
set noshowmode
set guifont=Menlo\ for\ Powerline:h12
let g:airline_powerline_fonts = 1
let g:airline_theme='solarized'
let g:airline_enable_branch = 0
let g:airline_section_b = '%f%m'
let g:airline_section_c = ''

" Key mappings
" Disable arrow keys
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>
imap <up> <nop>
imap <down> <nop>
imap <left> <nop>
imap <right> <nop>

" Map leader to easier to use key
let mapleader = ","

" Toggle and untoggle spell check
map <leader>ss :setlocal spell!<cr>

" Map leader w to save file
map <leader>w :w<cr>

" Split settings
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

set splitbelow
set splitright

" Syntastic plugin options
let g:syntastic_check_on_open=1
let g:syntastic_check_on_wq=0

let g:syntastic_haskell_checkers = ['hdevtools']
let g:syntastic_python_checkers = ['flake8']
let g:syntastic_javascript_checkers = ['jslint']

" Remove all default syntastic jslint config
let g:syntastic_javascript_jslint_conf = ''

" Turn off syntastic checking for some filetypes
let g:syntastic_scala_checkers = []
let g:syntastic_html_checkers = []

" Hdev tools settings
" Tell hdev tools to look in src and tests for modules
let g:hdevtools_options = '-g -isrc -g -itests -g -Wall'

" Unite settings
nnoremap <leader>f :<C-u>Unite file<CR>
nnoremap <leader>b :<C-u>Unite buffer<CR>

" Set auto command group
augroup UniteAutoCommands
  autocmd!
augroup END

" Autocommand to set mappings when in a unite buffer
autocmd UniteAutoCommands FileType unite call s:unite_settings()
function! s:unite_settings()

  nmap <buffer> <ESC> <Plug>(unite_exit)
  nnoremap <silent><buffer><expr> s unite#do_action('split')
  nnoremap <silent><buffer><expr> v unite#do_action('vsplit')

endfunction

