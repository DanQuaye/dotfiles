#!/usr/bin/env bash

# exit when script tries to use an undeclared variable
set -o nounset
# exit on error
set -o errexit
# exit if anything in a pipe fails
set -o pipefail

[[ "${DEBUG:-}" == 'true' ]] && set -o xtrace

readonly EXE_NAME=$(basename "$0")
readonly oneline_usage="$EXE_NAME [-h] command"

usage() {
  cat <<-EndUsage
		Usage: $oneline_usage
		Use '$EXE_NAME -h' for more information
	EndUsage
  exit 1
}

helpinfo() {
  cat <<-EndHelp
Usage: $oneline_usage

Commands:
    config
        Show current gcloud config
    projects
        List available gcloud projects
    use
        Select project to use
    clusters
        List available kubernetes clusters
    connect
        Connect to a specific kubernetes cluster


Flags:
    -h
        Show usage info

EndHelp
  exit 0
}

die() {
  echo "$*"
  exit 1
}

runaction() {

  if [[ -z "$(command -v gcloud)" ]]; then
    die "gcloud tool not installed"
  fi

  readonly action=$(printf "%s\n" "${1:-config}" | tr 'A-Z' 'a-z')

  case "$action" in
  "config")
    gcloud config list
    ;;
  "projects")
    gcloud config configurations list
    ;;
  "use")
    readonly project_name="$2"
    gcloud config configurations activate "$project_name"
    ;;
  "clusters")
    gcloud container clusters list
    ;;
  "connect")
    readonly cluster_name="$2"
    gcloud container clusters get-credentials "$cluster_name"
    ;;
  *)
    usage
    ;;
  esac

}
main() {
  while getopts "hf" opt "$@"; do
    case "$opt" in
    h)
      helpinfo
      ;;
    esac
  done

  runaction "${@:$OPTIND}"
}

main "$@"
