#!/bin/bash


die()
{
    echo "$*"
    exit 1
}

listTemplates()
{
    TEMPLTDIR=`git config --get --global templates.dir`
    echo "-------------"
    ls "$TEMPLTDIR"
    echo "-------------"
    echo "Pick a template (default) "
}

settemplate()
{
    TEMPLTCONF=""

    echo -n "Use a template? (y/N) "
    read USETEMPLT
    if [ "$USETEMPLT" == "y" ]; then
        listTemplates
        read TEMPLTNAME
        TEMPLTPATH="$TEMPLTDIR/$TEMPLTNAME"
        if [ -e "$TEMPLTPATH" ]; then
            CLONETEMPLT="$TEMPLTPATH"
        else
            echo "Template $TEMPLTNAME doesn't exist"
            echo "Using the default template"
        fi
    else
        echo "No worries, have fun!"
    fi
}

worksubmodules()
{
    echo -n "Set work email for submodules? (y/N) "
    read WORKSUBS
    if [ "$WORKSUBS" == "y" ]; then

        CHECKDIR="${@:(-1)}"
        if [ -d "$CHECKDIR" ]; then
            cd "$CHECKDIR"
        fi
        git submodule foreach git config user.email $WORKEMAIL
    fi
}

CLONEARGS="--recursive"
WORKEMAIL=`git config --get work.email`
TEMPLTDIR=`git config --get --global templates.dir`
WORKTEMPLT="$TEMPLTDIR/work"
CLONETEMPLT="$TEMPLTDIR/default"

echo "Hey, it looks like you're cloning a git repo!\n"

echo -n "Is this a work repo? (Y/n) "
read WORKREPO
if [ "$WORKREPO" == "y" ]; then
    echo "I'll set your work email and use the work template"
    git clone $CLONEARGS -c user.email=$WORKEMAIL --template $WORKTEMPLT "$@"
else
    settemplate
    git clone $CLONEARGS "$@" --template $CLONETEMPLT
fi

